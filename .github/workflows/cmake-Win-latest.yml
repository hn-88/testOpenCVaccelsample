name: CMake Build with OCV 4.11 on Windows

on: workflow_dispatch

env:
  # Path to the solution file relative to the root of the project.
  # SOLUTION_FILE_PATH: ./x64Win10.vcxproj

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  OpenCV_DIR: D:\a\OCVWarp\OCVWarp\OpenCV\opencv\build\x64\vc16\lib

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2
      
    - name: Cache OpenCV          
      uses: actions/cache@v4
      id: OpenCV-cache
      with:
          path: |
            **/OpenCV
          key: ${{ runner.os }}-OpenCV4.11.0x86-64
          
    - name: Install OpenCV from github releases
      if: steps.OpenCV-cache.outputs.cache-hit != 'true'
      run: |
        md OpenCV
        cd OpenCV
        echo "Downloading OpenCV release..."
        powershell -c "Invoke-WebRequest -Uri 'https://github.com/opencv/opencv/releases/download/4.11.0/opencv-4.11.0-windows.exe' -OutFile 'opencv-4.11.0-windows.exe'" 
        echo "Download complete. Extracting ... "
        7z x opencv-4.11.0-windows.exe
        cd ..

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_CONFIGURATION}}
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_CONFIGURATION}}
        # Rename-Item "x64\Release\x64Win10.exe" -NewName "OCVWarp-5testing.00-x64Win10.exe"

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: testaccelWin
        # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: build/*.exe
